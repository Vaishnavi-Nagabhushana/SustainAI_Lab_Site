---
const {
  name = '',
  role = '',
  presentAffiliation = '',
  startDate = '',
  endDate = '',
  imageSrc = '',
  description = '',
  email = '',
  compact = false,
} = Astro.props

const paragraphs = description ? description.split('\n\n') : []
---

<div
  class={`bg-zinc-50 dark:bg-zinc-800/60 border border-zinc-200 dark:border-zinc-600 ${compact ? 'p-4 mb-4' : 'p-6 mb-8'} rounded-md shadow-sm hover:shadow-md transition-shadow duration-300`}
>
  <div class={`flex ${compact ? 'flex-row' : 'flex-col md:flex-row'} items-start gap-4`}>
    <div
      class={`flex flex-col items-center text-center text-zinc-700 dark:text-zinc-200 text-sm ${compact ? 'w-32' : 'w-44'} shrink-0`}
    >
      {
        imageSrc && (
          <img src={imageSrc} alt={name} class={`${compact ? 'w-24 h-24' : 'w-40 h-40'} object-cover rounded-md`} />
        )
      }
      <p class="font-semibold text-zinc-800 dark:text-zinc-100 mt-2">{name}</p>
      {role && <p class="text-xs text-zinc-600 dark:text-zinc-400">{role}</p>}
      {
        (startDate || endDate) && (
          <p class="text-xs text-zinc-600 dark:text-zinc-400">
            {startDate} {endDate ? `– ${endDate}` : '– Present'}
          </p>
        )
      }
      {
        presentAffiliation && (
          <p class="text-xs text-indigo-700 dark:text-indigo-400 font-medium mt-1 text-center">{presentAffiliation}</p>
        )
      }
    </div>

    <div class={`text-zinc-700 dark:text-zinc-200 text-sm ${compact ? 'space-y-2' : 'space-y-4'} max-w-3xl`}>
      {paragraphs.map((para, idx) => <p key={idx}>{para}</p>)}
      {
        email && (
          <p>
            <span class="font-medium text-zinc-800 dark:text-zinc-100">Email:</span>
            <a href={`mailto:${email}`} class="text-indigo-600 dark:text-indigo-400 hover:underline ml-1">
              {email}
            </a>
          </p>
        )
      }
    </div>
  </div>
</div>
